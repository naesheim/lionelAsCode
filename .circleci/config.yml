version: 2
jobs:
    terraform-plan:
      docker:
          # this image takes gcloud credentials from an env variable called: GCLOUD_CREDENTIALS and authenticates gcloud with it.
          # the credentials file is made available inside the container in: /tmp/credentials.json
        - image: praqma/terraform-gcloud:11.7

      working_directory: ~/repo

      steps:
        - checkout
        # you may have different input variables needed below. These will be passed from circleci environment variables
        - run:
            name: running terraform plan
            command: |
              cd terraform
              terraform init
              terraform plan \
              -var cluster_username=$CLUSTER_USERNAME \
              -var cluster_password=$CLUSTER_PASSWORD

    terraform-apply:
      docker:
          # this image takes gcloud credentials from an env variable called: GCLOUD_CREDENTIALS and authenticates gcloud with it.
          # the credentials file is made available inside the container in: /tmp/credentials.json
        - image: praqma/terraform-gcloud:11.7

      working_directory: ~/repo

      steps:
        - checkout
        # you may have different input variables needed below. These will be passed from circleci environment variables
        - run:
            name: running terraform apply
            command: |
              cd terraform
              terraform init
              terraform apply --auto-approve  \
              -var cluster_username=$CLUSTER_USERNAME \
              -var cluster_password=$CLUSTER_PASSWORD

  #  build-docker-image:
  #    machine:
  #      docker_layer_caching: true
  #    working_directory: ~/repo
  #    steps:
  #      - checkout
  #      - run:
  #          name: building docker image
  #          command: |
  #            cd docker
  #            docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
  #            docker build -t naesheim/flaskritcie:${CIRCLE_SHA1:0:9}
  #            docker push naesheim/flaskritchie:${CIRCLE_SHA1:0:9}


workflows:
  version: 2
  clusters-plan-approve-and-deploy:
    jobs:
      - terraform-plan

      - hold-before-creating-cluster:
          type: approval
          filters:
            branches:
              only:
                -master
          requires:
            - terraform-plan

      - terraform-apply:
          requires:
            - hold-before-creating-cluster

  #    - build-docker-image:
  #       requires:
  #         - terraform-apply
